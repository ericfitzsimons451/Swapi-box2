// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Loader should match the snapshot with no data passed down 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Loader />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <h1>
          SwapiBox
        </h1>,
        <h2>
          Content loading...
        </h2>,
        <h3>
          May the 
          <span>
            Force
          </span>
           be with you!
        </h3>,
      ],
      "className": "loader",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "SwapiBox",
        },
        "ref": null,
        "rendered": "SwapiBox",
        "type": "h1",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "Content loading...",
        },
        "ref": null,
        "rendered": "Content loading...",
        "type": "h2",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            "May the ",
            <span>
              Force
            </span>,
            " be with you!",
          ],
        },
        "ref": null,
        "rendered": Array [
          "May the ",
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Force",
            },
            "ref": null,
            "rendered": "Force",
            "type": "span",
          },
          " be with you!",
        ],
        "type": "h3",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <h1>
            SwapiBox
          </h1>,
          <h2>
            Content loading...
          </h2>,
          <h3>
            May the 
            <span>
              Force
            </span>
             be with you!
          </h3>,
        ],
        "className": "loader",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "SwapiBox",
          },
          "ref": null,
          "rendered": "SwapiBox",
          "type": "h1",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Content loading...",
          },
          "ref": null,
          "rendered": "Content loading...",
          "type": "h2",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              "May the ",
              <span>
                Force
              </span>,
              " be with you!",
            ],
          },
          "ref": null,
          "rendered": Array [
            "May the ",
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Force",
              },
              "ref": null,
              "rendered": "Force",
              "type": "span",
            },
            " be with you!",
          ],
          "type": "h3",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
